version: "3.3"

services:
  manager:
    container_name: manager
    image: crackhash-manager:finish-1
    ports:
      - "8080:8080"
    environment:
      spring.rabbitmq.addresses : ds-rabbitmq:5672
      spring.data.mongodb.uri : mongodb://mongo1:27017,mongo2:27017,mongo3:27017/test
      hashcracker.workers-amount : 3
    networks:
      - crack-hash-net

  worker:
    image: crackhash-worker:finish-1
    environment:
      spring.rabbitmq.addresses: ds-rabbitmq:5672
    networks:
      - crack-hash-net
    deploy:
      replicas: 3


  ds-rabbitmq:
    container_name: ds-rabbitmq
    image: rabbitmq:3.9.14-management
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - crack-hash-net


  mongo1:
    container_name: mongo1
    image: mongo:4.4
    volumes:
      - ./scripts/rs-init.sh:/scripts/rs-init.sh
      - ./scripts/init.js:/scripts/init.js
    networks:
      - crack-hash-net
    ports:
      - 27017:27017
    depends_on:
      - mongo2
      - mongo3
    links:
      - mongo2
      - mongo3
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]

  mongo2:
    container_name: mongo2
    image: mongo:4.4
    networks:
      - crack-hash-net
    ports:
      - 27018:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  mongo3:
    container_name: mongo3
    image: mongo:4.4
    networks:
      - crack-hash-net
    ports:
      - 27019:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]

networks:
  crack-hash-net:
    driver: bridge